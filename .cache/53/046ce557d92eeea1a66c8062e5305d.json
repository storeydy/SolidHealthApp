{"id":"node_modules/queue-microtask/index.js","dependencies":[{"name":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\storeydy.github.io\\package.json","includedInParent":true,"mtime":1645793376876},{"name":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\storeydy.github.io\\node_modules\\queue-microtask\\package.json","includedInParent":true,"mtime":1645788400838}],"generated":{"js":"var global = arguments[3];\n/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\r\nlet promise\r\n\r\nmodule.exports = typeof queueMicrotask === 'function'\r\n  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global)\r\n  // reuse resolved promise, and allocate it lazily\r\n  : cb => (promise || (promise = Promise.resolve()))\r\n    .then(cb)\r\n    .catch(err => setTimeout(() => { throw err }, 0))\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/queue-microtask/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/queue-microtask/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/queue-microtask/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/queue-microtask/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/queue-microtask/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/queue-microtask/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/queue-microtask/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/queue-microtask/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/queue-microtask/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/queue-microtask/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}}],"sources":{"node_modules/queue-microtask/index.js":"/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\r\nlet promise\r\n\r\nmodule.exports = typeof queueMicrotask === 'function'\r\n  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global)\r\n  // reuse resolved promise, and allocate it lazily\r\n  : cb => (promise || (promise = Promise.resolve()))\r\n    .then(cb)\r\n    .catch(err => setTimeout(() => { throw err }, 0))\r\n"},"lineCount":11}},"error":null,"hash":"ecd9befa069743d9168e90f60d717823","cacheData":{"env":{}}}