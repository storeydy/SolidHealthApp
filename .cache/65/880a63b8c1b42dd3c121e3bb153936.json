{"id":"node_modules/@rdfjs/data-model/lib/Quad.js","dependencies":[{"name":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\storeydy.github.io\\package.json","includedInParent":true,"mtime":1645793376876},{"name":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\storeydy.github.io\\node_modules\\@rdfjs\\data-model\\package.json","includedInParent":true,"mtime":1645788394156},{"name":"./DefaultGraph.js","loc":{"line":1,"column":29},"parent":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\storeydy.github.io\\node_modules\\@rdfjs\\data-model\\lib\\Quad.js","resolved":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\storeydy.github.io\\node_modules\\@rdfjs\\data-model\\lib\\DefaultGraph.js"}],"generated":{"js":"const DefaultGraph = require('./DefaultGraph.js')\r\n\r\nclass Quad {\r\n  constructor (subject, predicate, object, graph) {\r\n    this.subject = subject\r\n    this.predicate = predicate\r\n    this.object = object\r\n\r\n    if (graph) {\r\n      this.graph = graph\r\n    } else {\r\n      this.graph = new DefaultGraph()\r\n    }\r\n  }\r\n\r\n  equals (other) {\r\n    // `|| !other.termType` is for backwards-compatibility with old factories without RDF* support.\r\n    return !!other && (other.termType === 'Quad' || !other.termType) &&\r\n      other.subject.equals(this.subject) && other.predicate.equals(this.predicate) &&\r\n      other.object.equals(this.object) && other.graph.equals(this.graph)\r\n  }\r\n}\r\n\r\nQuad.prototype.termType = 'Quad'\r\nQuad.prototype.value = ''\r\n\r\nmodule.exports = Quad\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Quad.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}}],"sources":{"node_modules/@rdfjs/data-model/lib/Quad.js":"const DefaultGraph = require('./DefaultGraph.js')\r\n\r\nclass Quad {\r\n  constructor (subject, predicate, object, graph) {\r\n    this.subject = subject\r\n    this.predicate = predicate\r\n    this.object = object\r\n\r\n    if (graph) {\r\n      this.graph = graph\r\n    } else {\r\n      this.graph = new DefaultGraph()\r\n    }\r\n  }\r\n\r\n  equals (other) {\r\n    // `|| !other.termType` is for backwards-compatibility with old factories without RDF* support.\r\n    return !!other && (other.termType === 'Quad' || !other.termType) &&\r\n      other.subject.equals(this.subject) && other.predicate.equals(this.predicate) &&\r\n      other.object.equals(this.object) && other.graph.equals(this.graph)\r\n  }\r\n}\r\n\r\nQuad.prototype.termType = 'Quad'\r\nQuad.prototype.value = ''\r\n\r\nmodule.exports = Quad\r\n"},"lineCount":28}},"error":null,"hash":"2a687554c50a7bafefc04c3446041ba9","cacheData":{"env":{}}}