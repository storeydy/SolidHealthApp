{"id":"node_modules/@rdfjs/data-model/lib/Literal.js","dependencies":[{"name":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\storeydy.github.io\\package.json","includedInParent":true,"mtime":1645788402217},{"name":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\storeydy.github.io\\node_modules\\@rdfjs\\data-model\\package.json","includedInParent":true,"mtime":1645788394156},{"name":"./NamedNode.js","loc":{"line":1,"column":26},"parent":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\storeydy.github.io\\node_modules\\@rdfjs\\data-model\\lib\\Literal.js","resolved":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\storeydy.github.io\\node_modules\\@rdfjs\\data-model\\lib\\NamedNode.js"}],"generated":{"js":"const NamedNode = require('./NamedNode.js')\r\n\r\nclass Literal {\r\n  constructor (value, language, datatype) {\r\n    this.value = value\r\n    this.datatype = Literal.stringDatatype\r\n    this.language = ''\r\n\r\n    if (language) {\r\n      this.language = language\r\n      this.datatype = Literal.langStringDatatype\r\n    } else if (datatype) {\r\n      this.datatype = datatype\r\n    }\r\n  }\r\n\r\n  equals (other) {\r\n    return !!other && other.termType === this.termType && other.value === this.value &&\r\n      other.language === this.language && other.datatype.equals(this.datatype)\r\n  }\r\n}\r\n\r\nLiteral.prototype.termType = 'Literal'\r\n\r\nLiteral.langStringDatatype = new NamedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#langString')\r\nLiteral.stringDatatype = new NamedNode('http://www.w3.org/2001/XMLSchema#string')\r\n\r\nmodule.exports = Literal\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@rdfjs/data-model/lib/Literal.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Literal.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Literal.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Literal.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Literal.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Literal.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Literal.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Literal.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Literal.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Literal.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Literal.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Literal.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Literal.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Literal.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Literal.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Literal.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Literal.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Literal.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Literal.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Literal.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Literal.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Literal.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Literal.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Literal.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Literal.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Literal.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Literal.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Literal.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/Literal.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}}],"sources":{"node_modules/@rdfjs/data-model/lib/Literal.js":"const NamedNode = require('./NamedNode.js')\r\n\r\nclass Literal {\r\n  constructor (value, language, datatype) {\r\n    this.value = value\r\n    this.datatype = Literal.stringDatatype\r\n    this.language = ''\r\n\r\n    if (language) {\r\n      this.language = language\r\n      this.datatype = Literal.langStringDatatype\r\n    } else if (datatype) {\r\n      this.datatype = datatype\r\n    }\r\n  }\r\n\r\n  equals (other) {\r\n    return !!other && other.termType === this.termType && other.value === this.value &&\r\n      other.language === this.language && other.datatype.equals(this.datatype)\r\n  }\r\n}\r\n\r\nLiteral.prototype.termType = 'Literal'\r\n\r\nLiteral.langStringDatatype = new NamedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#langString')\r\nLiteral.stringDatatype = new NamedNode('http://www.w3.org/2001/XMLSchema#string')\r\n\r\nmodule.exports = Literal\r\n"},"lineCount":29}},"error":null,"hash":"c09b472d4aaa31fa6830154c164c3495","cacheData":{"env":{}}}