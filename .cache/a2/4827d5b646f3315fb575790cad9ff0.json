{"id":"node_modules/@inrupt/solid-client-authn-browser/dist/defaultSession.js","dependencies":[{"name":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\storeydy.github.io\\node_modules\\@inrupt\\solid-client-authn-browser\\dist\\defaultSession.js.map","includedInParent":true,"mtime":1645788390839},{"name":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\storeydy.github.io\\node_modules\\@inrupt\\solid-client-authn-browser\\src\\defaultSession.ts","includedInParent":true,"mtime":1645788390947},{"name":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\storeydy.github.io\\package.json","includedInParent":true,"mtime":1645793376876},{"name":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\storeydy.github.io\\node_modules\\@inrupt\\solid-client-authn-browser\\package.json","includedInParent":true,"mtime":1645788390926},{"name":"./Session","loc":{"line":4,"column":26},"parent":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\storeydy.github.io\\node_modules\\@inrupt\\solid-client-authn-browser\\dist\\defaultSession.js","resolved":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\storeydy.github.io\\node_modules\\@inrupt\\solid-client-authn-browser\\dist\\Session.js"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.onSessionRestore = exports.onLogout = exports.onLogin = exports.handleIncomingRedirect = exports.logout = exports.login = exports.fetch = exports.getDefaultSession = void 0;\r\nconst Session_1 = require(\"./Session\");\r\nlet defaultSession;\r\nfunction getDefaultSession() {\r\n    if (typeof defaultSession === \"undefined\") {\r\n        defaultSession = new Session_1.Session();\r\n    }\r\n    return defaultSession;\r\n}\r\nexports.getDefaultSession = getDefaultSession;\r\nconst fetch = (...args) => {\r\n    const session = getDefaultSession();\r\n    return session.fetch(...args);\r\n};\r\nexports.fetch = fetch;\r\nconst login = (...args) => {\r\n    const session = getDefaultSession();\r\n    return session.login(...args);\r\n};\r\nexports.login = login;\r\nconst logout = (...args) => {\r\n    const session = getDefaultSession();\r\n    return session.logout(...args);\r\n};\r\nexports.logout = logout;\r\nconst handleIncomingRedirect = (...args) => {\r\n    const session = getDefaultSession();\r\n    return session.handleIncomingRedirect(...args);\r\n};\r\nexports.handleIncomingRedirect = handleIncomingRedirect;\r\nconst onLogin = (...args) => {\r\n    const session = getDefaultSession();\r\n    return session.onLogin(...args);\r\n};\r\nexports.onLogin = onLogin;\r\nconst onLogout = (...args) => {\r\n    const session = getDefaultSession();\r\n    return session.onLogout(...args);\r\n};\r\nexports.onLogout = onLogout;\r\nconst onSessionRestore = (...args) => {\r\n    const session = getDefaultSession();\r\n    return session.onSessionRestore(...args);\r\n};\r\nexports.onSessionRestore = onSessionRestore;\r\n"},"sourceMaps":{"js":{"version":3,"file":"defaultSession.js","sourceRoot":"","sources":["../src/defaultSession.ts"],"names":[],"mappings":";;;AAqBA,uCAAoC;AAEpC,IAAI,cAAuB,CAAC;AAY5B,SAAgB,iBAAiB;IAC/B,IAAI,OAAO,cAAc,KAAK,WAAW,EAAE;QACzC,cAAc,GAAG,IAAI,iBAAO,EAAE,CAAC;KAChC;IACD,OAAO,cAAc,CAAC;AACxB,CAAC;AALD,8CAKC;AAUM,MAAM,KAAK,GAAqB,CAAC,GAAG,IAAI,EAAE,EAAE;IACjD,MAAM,OAAO,GAAG,iBAAiB,EAAE,CAAC;IACpC,OAAO,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;AAChC,CAAC,CAAC;AAHW,QAAA,KAAK,SAGhB;AASK,MAAM,KAAK,GAAqB,CAAC,GAAG,IAAI,EAAE,EAAE;IACjD,MAAM,OAAO,GAAG,iBAAiB,EAAE,CAAC;IACpC,OAAO,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;AAChC,CAAC,CAAC;AAHW,QAAA,KAAK,SAGhB;AAQK,MAAM,MAAM,GAAsB,CAAC,GAAG,IAAI,EAAE,EAAE;IACnD,MAAM,OAAO,GAAG,iBAAiB,EAAE,CAAC;IACpC,OAAO,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC;AACjC,CAAC,CAAC;AAHW,QAAA,MAAM,UAGjB;AAQK,MAAM,sBAAsB,GAAsC,CACvE,GAAG,IAAI,EACP,EAAE;IACF,MAAM,OAAO,GAAG,iBAAiB,EAAE,CAAC;IACpC,OAAO,OAAO,CAAC,sBAAsB,CAAC,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC;AALW,QAAA,sBAAsB,0BAKjC;AAUK,MAAM,OAAO,GAAuB,CAAC,GAAG,IAAI,EAAE,EAAE;IACrD,MAAM,OAAO,GAAG,iBAAiB,EAAE,CAAC;IACpC,OAAO,OAAO,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC;AAClC,CAAC,CAAC;AAHW,QAAA,OAAO,WAGlB;AAQK,MAAM,QAAQ,GAAwB,CAAC,GAAG,IAAI,EAAE,EAAE;IACvD,MAAM,OAAO,GAAG,iBAAiB,EAAE,CAAC;IACpC,OAAO,OAAO,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,CAAC;AACnC,CAAC,CAAC;AAHW,QAAA,QAAQ,YAGnB;AAQK,MAAM,gBAAgB,GAAgC,CAAC,GAAG,IAAI,EAAE,EAAE;IACvE,MAAM,OAAO,GAAG,iBAAiB,EAAE,CAAC;IACpC,OAAO,OAAO,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,CAAC;AAC3C,CAAC,CAAC;AAHW,QAAA,gBAAgB,oBAG3B","sourcesContent":["/*\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\nimport { Session } from \"./Session\";\r\n\r\nlet defaultSession: Session;\r\n\r\n/**\r\n * Obtain the {@link Session} used when not explicitly instantiating one yourself.\r\n *\r\n * When using the top-level exports {@link fetch}, {@link login}, {@link logout},\r\n * {@link handleIncomingRedirect}, {@link onLogin} and {@link onLogout}, these apply to an\r\n * implicitly-instantiated {@link Session}.\r\n * This function returns a reference to that Session in order to obtain e.g. the current user's\r\n * WebID.\r\n * @since 1.3.0\r\n */\r\nexport function getDefaultSession(): Session {\r\n  if (typeof defaultSession === \"undefined\") {\r\n    defaultSession = new Session();\r\n  }\r\n  return defaultSession;\r\n}\r\n\r\n/**\r\n * This function's signature is equal to `window.fetch`, but if the current user is authenticated\r\n * (see [[login]] and [[handleIncomingRedirect]]), requests made using it will include that user's\r\n * credentials. If not, this will behave just like the regular `window.fetch`.\r\n *\r\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch}\r\n * @since 1.3.0\r\n */\r\nexport const fetch: Session[\"fetch\"] = (...args) => {\r\n  const session = getDefaultSession();\r\n  return session.fetch(...args);\r\n};\r\n\r\n/**\r\n * Triggers the login process. Note that this method will redirect the user away from your app.\r\n *\r\n * @param options Parameter to customize the login behaviour. In particular, two options are mandatory: `options.oidcIssuer`, the user's identity provider, and `options.redirectUrl`, the URL to which the user will be redirected after logging in their identity provider.\r\n * @returns This method should redirect the user away from the app: it does not return anything. The login process is completed by [[handleIncomingRedirect]].\r\n * @since 1.3.0\r\n */\r\nexport const login: Session[\"login\"] = (...args) => {\r\n  const session = getDefaultSession();\r\n  return session.login(...args);\r\n};\r\n\r\n/**\r\n * Logs the user out of the application. This does not log the user out of their\r\n * Solid identity provider, and should not redirect the user away.\r\n *\r\n * @since 1.3.0\r\n */\r\nexport const logout: Session[\"logout\"] = (...args) => {\r\n  const session = getDefaultSession();\r\n  return session.logout(...args);\r\n};\r\n\r\n/**\r\n * Completes the login process by processing the information provided by the Solid identity provider through redirect.\r\n *\r\n * @param url The URL of the page handling the redirect, including the query parameters â€” these contain the information to process the login.\r\n * @since 1.3.0\r\n */\r\nexport const handleIncomingRedirect: Session[\"handleIncomingRedirect\"] = (\r\n  ...args\r\n) => {\r\n  const session = getDefaultSession();\r\n  return session.handleIncomingRedirect(...args);\r\n};\r\n\r\n/**\r\n * Register a callback function to be called when a user completes login.\r\n *\r\n * The callback is called when {@link handleIncomingRedirect} completes successfully.\r\n * @since 1.3.0\r\n *\r\n * @param callback The function called when a user completes login.\r\n */\r\nexport const onLogin: Session[\"onLogin\"] = (...args) => {\r\n  const session = getDefaultSession();\r\n  return session.onLogin(...args);\r\n};\r\n\r\n/**\r\n * Register a callback function to be called when a user logs out:\r\n *\r\n * @param callback The function called when a user completes logout.\r\n * @since 1.3.0\r\n */\r\nexport const onLogout: Session[\"onLogout\"] = (...args) => {\r\n  const session = getDefaultSession();\r\n  return session.onLogout(...args);\r\n};\r\n\r\n/**\r\n * Register a callback function to be called when a session is restored:\r\n *\r\n * @param callback The function called when a session is restored.\r\n * @since 1.3.0\r\n */\r\nexport const onSessionRestore: Session[\"onSessionRestore\"] = (...args) => {\r\n  const session = getDefaultSession();\r\n  return session.onSessionRestore(...args);\r\n};\r\n"]}},"error":null,"hash":"58090d656bc4a08d8b325a39f57a211f","cacheData":{"env":{}}}