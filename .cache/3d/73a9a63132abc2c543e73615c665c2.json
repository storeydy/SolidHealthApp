{"id":"node_modules/path-browserify/index.js","dependencies":[{"name":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\storeydy.github.io\\package.json","includedInParent":true,"mtime":1645793376876},{"name":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\storeydy.github.io\\node_modules\\path-browserify\\package.json","includedInParent":true,"mtime":1645788400336},{"name":"process","parent":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\storeydy.github.io\\node_modules\\path-browserify\\index.js","resolved":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\storeydy.github.io\\node_modules\\process\\browser.js"}],"generated":{"js":"var process = require(\"process\");\n// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\r\n// backported and transplited with Babel, with backwards-compat fixes\r\n\r\n// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n// resolves . and .. elements in a path array with directory names there\r\n// must be no slashes, empty elements, or device names (c:\\) in the array\r\n// (so also no leading and trailing slashes - it does not distinguish\r\n// relative and absolute paths)\r\nfunction normalizeArray(parts, allowAboveRoot) {\r\n  // if the path tries to go above the root, `up` ends up > 0\r\n  var up = 0;\r\n  for (var i = parts.length - 1; i >= 0; i--) {\r\n    var last = parts[i];\r\n    if (last === '.') {\r\n      parts.splice(i, 1);\r\n    } else if (last === '..') {\r\n      parts.splice(i, 1);\r\n      up++;\r\n    } else if (up) {\r\n      parts.splice(i, 1);\r\n      up--;\r\n    }\r\n  }\r\n\r\n  // if the path is allowed to go above the root, restore leading ..s\r\n  if (allowAboveRoot) {\r\n    for (; up--; up) {\r\n      parts.unshift('..');\r\n    }\r\n  }\r\n\r\n  return parts;\r\n}\r\n\r\n// path.resolve([from ...], to)\r\n// posix version\r\nexports.resolve = function() {\r\n  var resolvedPath = '',\r\n      resolvedAbsolute = false;\r\n\r\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\r\n    var path = (i >= 0) ? arguments[i] : process.cwd();\r\n\r\n    // Skip empty and invalid entries\r\n    if (typeof path !== 'string') {\r\n      throw new TypeError('Arguments to path.resolve must be strings');\r\n    } else if (!path) {\r\n      continue;\r\n    }\r\n\r\n    resolvedPath = path + '/' + resolvedPath;\r\n    resolvedAbsolute = path.charAt(0) === '/';\r\n  }\r\n\r\n  // At this point the path should be resolved to a full absolute path, but\r\n  // handle relative paths to be safe (might happen when process.cwd() fails)\r\n\r\n  // Normalize the path\r\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\r\n    return !!p;\r\n  }), !resolvedAbsolute).join('/');\r\n\r\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\r\n};\r\n\r\n// path.normalize(path)\r\n// posix version\r\nexports.normalize = function(path) {\r\n  var isAbsolute = exports.isAbsolute(path),\r\n      trailingSlash = substr(path, -1) === '/';\r\n\r\n  // Normalize the path\r\n  path = normalizeArray(filter(path.split('/'), function(p) {\r\n    return !!p;\r\n  }), !isAbsolute).join('/');\r\n\r\n  if (!path && !isAbsolute) {\r\n    path = '.';\r\n  }\r\n  if (path && trailingSlash) {\r\n    path += '/';\r\n  }\r\n\r\n  return (isAbsolute ? '/' : '') + path;\r\n};\r\n\r\n// posix version\r\nexports.isAbsolute = function(path) {\r\n  return path.charAt(0) === '/';\r\n};\r\n\r\n// posix version\r\nexports.join = function() {\r\n  var paths = Array.prototype.slice.call(arguments, 0);\r\n  return exports.normalize(filter(paths, function(p, index) {\r\n    if (typeof p !== 'string') {\r\n      throw new TypeError('Arguments to path.join must be strings');\r\n    }\r\n    return p;\r\n  }).join('/'));\r\n};\r\n\r\n\r\n// path.relative(from, to)\r\n// posix version\r\nexports.relative = function(from, to) {\r\n  from = exports.resolve(from).substr(1);\r\n  to = exports.resolve(to).substr(1);\r\n\r\n  function trim(arr) {\r\n    var start = 0;\r\n    for (; start < arr.length; start++) {\r\n      if (arr[start] !== '') break;\r\n    }\r\n\r\n    var end = arr.length - 1;\r\n    for (; end >= 0; end--) {\r\n      if (arr[end] !== '') break;\r\n    }\r\n\r\n    if (start > end) return [];\r\n    return arr.slice(start, end - start + 1);\r\n  }\r\n\r\n  var fromParts = trim(from.split('/'));\r\n  var toParts = trim(to.split('/'));\r\n\r\n  var length = Math.min(fromParts.length, toParts.length);\r\n  var samePartsLength = length;\r\n  for (var i = 0; i < length; i++) {\r\n    if (fromParts[i] !== toParts[i]) {\r\n      samePartsLength = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  var outputParts = [];\r\n  for (var i = samePartsLength; i < fromParts.length; i++) {\r\n    outputParts.push('..');\r\n  }\r\n\r\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\r\n\r\n  return outputParts.join('/');\r\n};\r\n\r\nexports.sep = '/';\r\nexports.delimiter = ':';\r\n\r\nexports.dirname = function (path) {\r\n  if (typeof path !== 'string') path = path + '';\r\n  if (path.length === 0) return '.';\r\n  var code = path.charCodeAt(0);\r\n  var hasRoot = code === 47 /*/*/;\r\n  var end = -1;\r\n  var matchedSlash = true;\r\n  for (var i = path.length - 1; i >= 1; --i) {\r\n    code = path.charCodeAt(i);\r\n    if (code === 47 /*/*/) {\r\n        if (!matchedSlash) {\r\n          end = i;\r\n          break;\r\n        }\r\n      } else {\r\n      // We saw the first non-path separator\r\n      matchedSlash = false;\r\n    }\r\n  }\r\n\r\n  if (end === -1) return hasRoot ? '/' : '.';\r\n  if (hasRoot && end === 1) {\r\n    // return '//';\r\n    // Backwards-compat fix:\r\n    return '/';\r\n  }\r\n  return path.slice(0, end);\r\n};\r\n\r\nfunction basename(path) {\r\n  if (typeof path !== 'string') path = path + '';\r\n\r\n  var start = 0;\r\n  var end = -1;\r\n  var matchedSlash = true;\r\n  var i;\r\n\r\n  for (i = path.length - 1; i >= 0; --i) {\r\n    if (path.charCodeAt(i) === 47 /*/*/) {\r\n        // If we reached a path separator that was not part of a set of path\r\n        // separators at the end of the string, stop now\r\n        if (!matchedSlash) {\r\n          start = i + 1;\r\n          break;\r\n        }\r\n      } else if (end === -1) {\r\n      // We saw the first non-path separator, mark this as the end of our\r\n      // path component\r\n      matchedSlash = false;\r\n      end = i + 1;\r\n    }\r\n  }\r\n\r\n  if (end === -1) return '';\r\n  return path.slice(start, end);\r\n}\r\n\r\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\r\n// in new Node.js versions, so only basename() above is backported here\r\nexports.basename = function (path, ext) {\r\n  var f = basename(path);\r\n  if (ext && f.substr(-1 * ext.length) === ext) {\r\n    f = f.substr(0, f.length - ext.length);\r\n  }\r\n  return f;\r\n};\r\n\r\nexports.extname = function (path) {\r\n  if (typeof path !== 'string') path = path + '';\r\n  var startDot = -1;\r\n  var startPart = 0;\r\n  var end = -1;\r\n  var matchedSlash = true;\r\n  // Track the state of characters (if any) we see before our first dot and\r\n  // after any path separator we find\r\n  var preDotState = 0;\r\n  for (var i = path.length - 1; i >= 0; --i) {\r\n    var code = path.charCodeAt(i);\r\n    if (code === 47 /*/*/) {\r\n        // If we reached a path separator that was not part of a set of path\r\n        // separators at the end of the string, stop now\r\n        if (!matchedSlash) {\r\n          startPart = i + 1;\r\n          break;\r\n        }\r\n        continue;\r\n      }\r\n    if (end === -1) {\r\n      // We saw the first non-path separator, mark this as the end of our\r\n      // extension\r\n      matchedSlash = false;\r\n      end = i + 1;\r\n    }\r\n    if (code === 46 /*.*/) {\r\n        // If this is our first dot, mark it as the start of our extension\r\n        if (startDot === -1)\r\n          startDot = i;\r\n        else if (preDotState !== 1)\r\n          preDotState = 1;\r\n    } else if (startDot !== -1) {\r\n      // We saw a non-dot and non-path separator before our dot, so we should\r\n      // have a good chance at having a non-empty extension\r\n      preDotState = -1;\r\n    }\r\n  }\r\n\r\n  if (startDot === -1 || end === -1 ||\r\n      // We saw a non-dot character immediately before the dot\r\n      preDotState === 0 ||\r\n      // The (right-most) trimmed path component is exactly '..'\r\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\r\n    return '';\r\n  }\r\n  return path.slice(startDot, end);\r\n};\r\n\r\nfunction filter (xs, f) {\r\n    if (xs.filter) return xs.filter(f);\r\n    var res = [];\r\n    for (var i = 0; i < xs.length; i++) {\r\n        if (f(xs[i], i, xs)) res.push(xs[i]);\r\n    }\r\n    return res;\r\n}\r\n\r\n// String.prototype.substr - negative index don't work in IE8\r\nvar substr = 'ab'.substr(-1) === 'b'\r\n    ? function (str, start, len) { return str.substr(start, len) }\r\n    : function (str, start, len) {\r\n        if (start < 0) start = str.length + start;\r\n        return str.substr(start, len);\r\n    }\r\n;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/path-browserify/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/path-browserify/index.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}}],"sources":{"node_modules/path-browserify/index.js":"// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\r\n// backported and transplited with Babel, with backwards-compat fixes\r\n\r\n// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n// resolves . and .. elements in a path array with directory names there\r\n// must be no slashes, empty elements, or device names (c:\\) in the array\r\n// (so also no leading and trailing slashes - it does not distinguish\r\n// relative and absolute paths)\r\nfunction normalizeArray(parts, allowAboveRoot) {\r\n  // if the path tries to go above the root, `up` ends up > 0\r\n  var up = 0;\r\n  for (var i = parts.length - 1; i >= 0; i--) {\r\n    var last = parts[i];\r\n    if (last === '.') {\r\n      parts.splice(i, 1);\r\n    } else if (last === '..') {\r\n      parts.splice(i, 1);\r\n      up++;\r\n    } else if (up) {\r\n      parts.splice(i, 1);\r\n      up--;\r\n    }\r\n  }\r\n\r\n  // if the path is allowed to go above the root, restore leading ..s\r\n  if (allowAboveRoot) {\r\n    for (; up--; up) {\r\n      parts.unshift('..');\r\n    }\r\n  }\r\n\r\n  return parts;\r\n}\r\n\r\n// path.resolve([from ...], to)\r\n// posix version\r\nexports.resolve = function() {\r\n  var resolvedPath = '',\r\n      resolvedAbsolute = false;\r\n\r\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\r\n    var path = (i >= 0) ? arguments[i] : process.cwd();\r\n\r\n    // Skip empty and invalid entries\r\n    if (typeof path !== 'string') {\r\n      throw new TypeError('Arguments to path.resolve must be strings');\r\n    } else if (!path) {\r\n      continue;\r\n    }\r\n\r\n    resolvedPath = path + '/' + resolvedPath;\r\n    resolvedAbsolute = path.charAt(0) === '/';\r\n  }\r\n\r\n  // At this point the path should be resolved to a full absolute path, but\r\n  // handle relative paths to be safe (might happen when process.cwd() fails)\r\n\r\n  // Normalize the path\r\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\r\n    return !!p;\r\n  }), !resolvedAbsolute).join('/');\r\n\r\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\r\n};\r\n\r\n// path.normalize(path)\r\n// posix version\r\nexports.normalize = function(path) {\r\n  var isAbsolute = exports.isAbsolute(path),\r\n      trailingSlash = substr(path, -1) === '/';\r\n\r\n  // Normalize the path\r\n  path = normalizeArray(filter(path.split('/'), function(p) {\r\n    return !!p;\r\n  }), !isAbsolute).join('/');\r\n\r\n  if (!path && !isAbsolute) {\r\n    path = '.';\r\n  }\r\n  if (path && trailingSlash) {\r\n    path += '/';\r\n  }\r\n\r\n  return (isAbsolute ? '/' : '') + path;\r\n};\r\n\r\n// posix version\r\nexports.isAbsolute = function(path) {\r\n  return path.charAt(0) === '/';\r\n};\r\n\r\n// posix version\r\nexports.join = function() {\r\n  var paths = Array.prototype.slice.call(arguments, 0);\r\n  return exports.normalize(filter(paths, function(p, index) {\r\n    if (typeof p !== 'string') {\r\n      throw new TypeError('Arguments to path.join must be strings');\r\n    }\r\n    return p;\r\n  }).join('/'));\r\n};\r\n\r\n\r\n// path.relative(from, to)\r\n// posix version\r\nexports.relative = function(from, to) {\r\n  from = exports.resolve(from).substr(1);\r\n  to = exports.resolve(to).substr(1);\r\n\r\n  function trim(arr) {\r\n    var start = 0;\r\n    for (; start < arr.length; start++) {\r\n      if (arr[start] !== '') break;\r\n    }\r\n\r\n    var end = arr.length - 1;\r\n    for (; end >= 0; end--) {\r\n      if (arr[end] !== '') break;\r\n    }\r\n\r\n    if (start > end) return [];\r\n    return arr.slice(start, end - start + 1);\r\n  }\r\n\r\n  var fromParts = trim(from.split('/'));\r\n  var toParts = trim(to.split('/'));\r\n\r\n  var length = Math.min(fromParts.length, toParts.length);\r\n  var samePartsLength = length;\r\n  for (var i = 0; i < length; i++) {\r\n    if (fromParts[i] !== toParts[i]) {\r\n      samePartsLength = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  var outputParts = [];\r\n  for (var i = samePartsLength; i < fromParts.length; i++) {\r\n    outputParts.push('..');\r\n  }\r\n\r\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\r\n\r\n  return outputParts.join('/');\r\n};\r\n\r\nexports.sep = '/';\r\nexports.delimiter = ':';\r\n\r\nexports.dirname = function (path) {\r\n  if (typeof path !== 'string') path = path + '';\r\n  if (path.length === 0) return '.';\r\n  var code = path.charCodeAt(0);\r\n  var hasRoot = code === 47 /*/*/;\r\n  var end = -1;\r\n  var matchedSlash = true;\r\n  for (var i = path.length - 1; i >= 1; --i) {\r\n    code = path.charCodeAt(i);\r\n    if (code === 47 /*/*/) {\r\n        if (!matchedSlash) {\r\n          end = i;\r\n          break;\r\n        }\r\n      } else {\r\n      // We saw the first non-path separator\r\n      matchedSlash = false;\r\n    }\r\n  }\r\n\r\n  if (end === -1) return hasRoot ? '/' : '.';\r\n  if (hasRoot && end === 1) {\r\n    // return '//';\r\n    // Backwards-compat fix:\r\n    return '/';\r\n  }\r\n  return path.slice(0, end);\r\n};\r\n\r\nfunction basename(path) {\r\n  if (typeof path !== 'string') path = path + '';\r\n\r\n  var start = 0;\r\n  var end = -1;\r\n  var matchedSlash = true;\r\n  var i;\r\n\r\n  for (i = path.length - 1; i >= 0; --i) {\r\n    if (path.charCodeAt(i) === 47 /*/*/) {\r\n        // If we reached a path separator that was not part of a set of path\r\n        // separators at the end of the string, stop now\r\n        if (!matchedSlash) {\r\n          start = i + 1;\r\n          break;\r\n        }\r\n      } else if (end === -1) {\r\n      // We saw the first non-path separator, mark this as the end of our\r\n      // path component\r\n      matchedSlash = false;\r\n      end = i + 1;\r\n    }\r\n  }\r\n\r\n  if (end === -1) return '';\r\n  return path.slice(start, end);\r\n}\r\n\r\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\r\n// in new Node.js versions, so only basename() above is backported here\r\nexports.basename = function (path, ext) {\r\n  var f = basename(path);\r\n  if (ext && f.substr(-1 * ext.length) === ext) {\r\n    f = f.substr(0, f.length - ext.length);\r\n  }\r\n  return f;\r\n};\r\n\r\nexports.extname = function (path) {\r\n  if (typeof path !== 'string') path = path + '';\r\n  var startDot = -1;\r\n  var startPart = 0;\r\n  var end = -1;\r\n  var matchedSlash = true;\r\n  // Track the state of characters (if any) we see before our first dot and\r\n  // after any path separator we find\r\n  var preDotState = 0;\r\n  for (var i = path.length - 1; i >= 0; --i) {\r\n    var code = path.charCodeAt(i);\r\n    if (code === 47 /*/*/) {\r\n        // If we reached a path separator that was not part of a set of path\r\n        // separators at the end of the string, stop now\r\n        if (!matchedSlash) {\r\n          startPart = i + 1;\r\n          break;\r\n        }\r\n        continue;\r\n      }\r\n    if (end === -1) {\r\n      // We saw the first non-path separator, mark this as the end of our\r\n      // extension\r\n      matchedSlash = false;\r\n      end = i + 1;\r\n    }\r\n    if (code === 46 /*.*/) {\r\n        // If this is our first dot, mark it as the start of our extension\r\n        if (startDot === -1)\r\n          startDot = i;\r\n        else if (preDotState !== 1)\r\n          preDotState = 1;\r\n    } else if (startDot !== -1) {\r\n      // We saw a non-dot and non-path separator before our dot, so we should\r\n      // have a good chance at having a non-empty extension\r\n      preDotState = -1;\r\n    }\r\n  }\r\n\r\n  if (startDot === -1 || end === -1 ||\r\n      // We saw a non-dot character immediately before the dot\r\n      preDotState === 0 ||\r\n      // The (right-most) trimmed path component is exactly '..'\r\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\r\n    return '';\r\n  }\r\n  return path.slice(startDot, end);\r\n};\r\n\r\nfunction filter (xs, f) {\r\n    if (xs.filter) return xs.filter(f);\r\n    var res = [];\r\n    for (var i = 0; i < xs.length; i++) {\r\n        if (f(xs[i], i, xs)) res.push(xs[i]);\r\n    }\r\n    return res;\r\n}\r\n\r\n// String.prototype.substr - negative index don't work in IE8\r\nvar substr = 'ab'.substr(-1) === 'b'\r\n    ? function (str, start, len) { return str.substr(start, len) }\r\n    : function (str, start, len) {\r\n        if (start < 0) start = str.length + start;\r\n        return str.substr(start, len);\r\n    }\r\n;\r\n"},"lineCount":304}},"error":null,"hash":"2bd4178ab98a50a3f9894ab1ace84207","cacheData":{"env":{}}}