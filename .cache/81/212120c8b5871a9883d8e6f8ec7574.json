{"id":"node_modules/@inrupt/solid-client-authn-browser/dist/iframe.js","dependencies":[{"name":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\storeydy.github.io\\node_modules\\@inrupt\\solid-client-authn-browser\\dist\\iframe.js.map","includedInParent":true,"mtime":1645788390842},{"name":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\storeydy.github.io\\node_modules\\@inrupt\\solid-client-authn-browser\\src\\iframe.ts","includedInParent":true,"mtime":1645788390949},{"name":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\storeydy.github.io\\package.json","includedInParent":true,"mtime":1645793376876},{"name":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\storeydy.github.io\\node_modules\\@inrupt\\solid-client-authn-browser\\package.json","includedInParent":true,"mtime":1645788390926}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.postRedirectUrlToParent = exports.setupIframeListener = exports.redirectInIframe = void 0;\r\nlet redirectIframe;\r\nfunction getRedirectIframe() {\r\n    if (typeof redirectIframe === \"undefined\") {\r\n        redirectIframe = window.document.createElement(\"iframe\");\r\n        redirectIframe.setAttribute(\"hidden\", \"true\");\r\n        redirectIframe.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin\");\r\n    }\r\n    return redirectIframe;\r\n}\r\nfunction redirectInIframe(redirectUrl) {\r\n    const iframe = getRedirectIframe();\r\n    window.document.body.appendChild(iframe);\r\n    iframe.src = redirectUrl;\r\n}\r\nexports.redirectInIframe = redirectInIframe;\r\nfunction setupIframeListener(handleIframeRedirect) {\r\n    if (typeof window === \"undefined\") {\r\n        return;\r\n    }\r\n    window.addEventListener(\"message\", async (evt) => {\r\n        const iframe = getRedirectIframe();\r\n        if (evt.origin === window.location.origin &&\r\n            evt.source === iframe.contentWindow) {\r\n            if (typeof evt.data.redirectUrl === \"string\") {\r\n                await handleIframeRedirect(evt.data.redirectUrl);\r\n            }\r\n        }\r\n        if (window.document.body.contains(iframe)) {\r\n            window.document.body.removeChild(iframe);\r\n        }\r\n    });\r\n}\r\nexports.setupIframeListener = setupIframeListener;\r\nfunction postRedirectUrlToParent(redirectUrl) {\r\n    window.top.postMessage({\r\n        redirectUrl,\r\n    }, window.location.origin);\r\n}\r\nexports.postRedirectUrlToParent = postRedirectUrlToParent;\r\n"},"sourceMaps":{"js":{"version":3,"file":"iframe.js","sourceRoot":"","sources":["../src/iframe.ts"],"names":[],"mappings":";;;AAyBA,IAAI,cAAiC,CAAC;AAItC,SAAS,iBAAiB;IACxB,IAAI,OAAO,cAAc,KAAK,WAAW,EAAE;QACzC,cAAc,GAAG,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QACzD,cAAc,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAC9C,cAAc,CAAC,YAAY,CAAC,SAAS,EAAE,iCAAiC,CAAC,CAAC;KAC3E;IACD,OAAO,cAAc,CAAC;AACxB,CAAC;AASD,SAAgB,gBAAgB,CAAC,WAAmB;IAClD,MAAM,MAAM,GAAG,iBAAiB,EAAE,CAAC;IACnC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IACzC,MAAM,CAAC,GAAG,GAAG,WAAW,CAAC;AAC3B,CAAC;AAJD,4CAIC;AAYD,SAAgB,mBAAmB,CACjC,oBAA+D;IAO/D,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;QACjC,OAAO;KACR;IACD,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,KAAK,EAAE,GAAiB,EAAE,EAAE;QAC7D,MAAM,MAAM,GAAG,iBAAiB,EAAE,CAAC;QACnC,IACE,GAAG,CAAC,MAAM,KAAK,MAAM,CAAC,QAAQ,CAAC,MAAM;YACrC,GAAG,CAAC,MAAM,KAAK,MAAM,CAAC,aAAa,EACnC;YACA,IAAI,OAAO,GAAG,CAAC,IAAI,CAAC,WAAW,KAAK,QAAQ,EAAE;gBAE5C,MAAM,oBAAoB,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aAClD;SACF;QAED,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YACzC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;SAC1C;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AA3BD,kDA2BC;AAMD,SAAgB,uBAAuB,CAAC,WAAmB;IACzD,MAAM,CAAC,GAAG,CAAC,WAAW,CACpB;QACE,WAAW;KACZ,EACD,MAAM,CAAC,QAAQ,CAAC,MAAM,CACvB,CAAC;AACJ,CAAC;AAPD,0DAOC","sourcesContent":["/*\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\n// This is an internal variable used to share some state between `redirectInIframe`,\r\n// which initializes it, and `setupIframeListener`, which reads from it. It avoids\r\n// creating a DOM element with identifying attributes such as an ID which may clash\r\n// with some other element set up by the library user.\r\nlet redirectIframe: HTMLIFrameElement;\r\n\r\n// The iframe is dynamically created rather than on import,\r\n// to avoid accessing `window` when an app is doing server-side rendering:\r\nfunction getRedirectIframe(): HTMLIFrameElement {\r\n  if (typeof redirectIframe === \"undefined\") {\r\n    redirectIframe = window.document.createElement(\"iframe\");\r\n    redirectIframe.setAttribute(\"hidden\", \"true\");\r\n    redirectIframe.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin\");\r\n  }\r\n  return redirectIframe;\r\n}\r\n\r\n/**\r\n * Redirects the browser to a provided IRI, but does such redirection in a child\r\n * iframe. This is used to have a front-channel interaction with the Solid Identity\r\n * Provider without having the user involved, and without refreshing the main window.\r\n *\r\n * @param redirectUrl The IRI to which the iframe should be redirected.\r\n */\r\nexport function redirectInIframe(redirectUrl: string): void {\r\n  const iframe = getRedirectIframe();\r\n  window.document.body.appendChild(iframe);\r\n  iframe.src = redirectUrl;\r\n}\r\n\r\n/**\r\n * This function sets up an event listener that will receive iframe messages.\r\n * It is only listening to messages coming from iframes that could have been\r\n * opened by the library, and expects to be posted the IRI the iframe has been\r\n * redirected to by the Solid Identity Provider. This way, the top window can\r\n * perform the backchannel exchange to the token endpoint without performing\r\n * the front-channel redirection.\r\n *\r\n * @param handleIframeRedirect Redirect URL sent by the iframe\r\n */\r\nexport function setupIframeListener(\r\n  handleIframeRedirect: (redirectUrl: string) => Promise<unknown>\r\n): void {\r\n  // If an app is doing server-side rendering, setting up an iframe listener\r\n  // is pointless (since there is no iframe, and there will be no expiring\r\n  // session to renew) and might even throw a `window` not defined error, so\r\n  // skip this in that case:\r\n  /* istanbul ignore if (window is always defined in tests) */\r\n  if (typeof window === \"undefined\") {\r\n    return;\r\n  }\r\n  window.addEventListener(\"message\", async (evt: MessageEvent) => {\r\n    const iframe = getRedirectIframe();\r\n    if (\r\n      evt.origin === window.location.origin &&\r\n      evt.source === iframe.contentWindow\r\n    ) {\r\n      if (typeof evt.data.redirectUrl === \"string\") {\r\n        // The top-level window handles the redirect that happened in the iframe.\r\n        await handleIframeRedirect(evt.data.redirectUrl);\r\n      }\r\n    }\r\n    // Clean up the iframe from the DOM\r\n    if (window.document.body.contains(iframe)) {\r\n      window.document.body.removeChild(iframe);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * This function bubbles up the result of the front-channel interaction with\r\n * the authorization endpoint to the parent window.\r\n */\r\nexport function postRedirectUrlToParent(redirectUrl: string): void {\r\n  window.top.postMessage(\r\n    {\r\n      redirectUrl,\r\n    },\r\n    window.location.origin\r\n  );\r\n}\r\n"]}},"error":null,"hash":"51e5aa492d372ebd4bfc3432c015c06b","cacheData":{"env":{}}}