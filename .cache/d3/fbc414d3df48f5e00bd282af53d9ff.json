{"id":"node_modules/@rdfjs/data-model/lib/BlankNode.js","dependencies":[{"name":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\storeydy.github.io\\package.json","includedInParent":true,"mtime":1645788402217},{"name":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\storeydy.github.io\\node_modules\\@rdfjs\\data-model\\package.json","includedInParent":true,"mtime":1645788394156}],"generated":{"js":"class BlankNode {\r\n  constructor (id) {\r\n    this.value = id || ('b' + (++BlankNode.nextId))\r\n  }\r\n\r\n  equals (other) {\r\n    return !!other && other.termType === this.termType && other.value === this.value\r\n  }\r\n}\r\n\r\nBlankNode.prototype.termType = 'BlankNode'\r\n\r\nBlankNode.nextId = 0\r\n\r\nmodule.exports = BlankNode\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@rdfjs/data-model/lib/BlankNode.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/BlankNode.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/BlankNode.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/BlankNode.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/BlankNode.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/BlankNode.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/BlankNode.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/BlankNode.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/BlankNode.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/BlankNode.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/BlankNode.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/BlankNode.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/BlankNode.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/BlankNode.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/BlankNode.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@rdfjs/data-model/lib/BlankNode.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}}],"sources":{"node_modules/@rdfjs/data-model/lib/BlankNode.js":"class BlankNode {\r\n  constructor (id) {\r\n    this.value = id || ('b' + (++BlankNode.nextId))\r\n  }\r\n\r\n  equals (other) {\r\n    return !!other && other.termType === this.termType && other.value === this.value\r\n  }\r\n}\r\n\r\nBlankNode.prototype.termType = 'BlankNode'\r\n\r\nBlankNode.nextId = 0\r\n\r\nmodule.exports = BlankNode\r\n"},"lineCount":16}},"error":null,"hash":"63beee879fdfaa477ad2e1deb284b6f3","cacheData":{"env":{}}}