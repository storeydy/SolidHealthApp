{"id":"node_modules/@inrupt/solid-client-authn-browser/dist/storage/BrowserStorage.js","dependencies":[{"name":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\storeydy.github.io\\node_modules\\@inrupt\\solid-client-authn-browser\\dist\\storage\\BrowserStorage.js.map","includedInParent":true,"mtime":1645788390869},{"name":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\storeydy.github.io\\node_modules\\@inrupt\\solid-client-authn-browser\\src\\storage\\BrowserStorage.ts","includedInParent":true,"mtime":1645788390972},{"name":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\storeydy.github.io\\package.json","includedInParent":true,"mtime":1645788402217},{"name":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\storeydy.github.io\\node_modules\\@inrupt\\solid-client-authn-browser\\package.json","includedInParent":true,"mtime":1645788390926}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass BrowserStorage {\r\n    get storage() {\r\n        return window.localStorage;\r\n    }\r\n    async get(key) {\r\n        return this.storage.getItem(key) || undefined;\r\n    }\r\n    async set(key, value) {\r\n        this.storage.setItem(key, value);\r\n    }\r\n    async delete(key) {\r\n        this.storage.removeItem(key);\r\n    }\r\n}\r\nexports.default = BrowserStorage;\r\n"},"sourceMaps":{"js":{"version":3,"file":"BrowserStorage.js","sourceRoot":"","sources":["../../src/storage/BrowserStorage.ts"],"names":[],"mappings":";;AA+BA,MAAqB,cAAc;IACjC,IAAI,OAAO;QACT,OAAO,MAAM,CAAC,YAAY,CAAC;IAC7B,CAAC;IAED,KAAK,CAAC,GAAG,CAAC,GAAW;QACnB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,SAAS,CAAC;IAChD,CAAC;IAED,KAAK,CAAC,GAAG,CAAC,GAAW,EAAE,KAAa;QAClC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IACnC,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,GAAW;QACtB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC;CACF;AAhBD,iCAgBC","sourcesContent":["/*\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\n/**\r\n * @hidden\r\n * @packageDocumentation\r\n */\r\n\r\nimport { IStorage } from \"@inrupt/solid-client-authn-core\";\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport default class BrowserStorage implements IStorage {\r\n  get storage(): typeof window.localStorage {\r\n    return window.localStorage;\r\n  }\r\n\r\n  async get(key: string): Promise<string | undefined> {\r\n    return this.storage.getItem(key) || undefined;\r\n  }\r\n\r\n  async set(key: string, value: string): Promise<void> {\r\n    this.storage.setItem(key, value);\r\n  }\r\n\r\n  async delete(key: string): Promise<void> {\r\n    this.storage.removeItem(key);\r\n  }\r\n}\r\n"]}},"error":null,"hash":"f3ead86b4ec0e2d93287d5f4c4c62cd8","cacheData":{"env":{}}}