{"id":"node_modules/wrappy/wrappy.js","dependencies":[{"name":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\storeydy.github.io\\package.json","includedInParent":true,"mtime":1645793376876},{"name":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\storeydy.github.io\\node_modules\\wrappy\\package.json","includedInParent":true,"mtime":1645788402160}],"generated":{"js":"// Returns a wrapper function that returns a wrapped callback\r\n// The wrapper function should do some stuff, and return a\r\n// presumably different callback function.\r\n// This makes sure that own properties are retained, so that\r\n// decorations and such are not lost along the way.\r\nmodule.exports = wrappy\r\nfunction wrappy (fn, cb) {\r\n  if (fn && cb) return wrappy(fn)(cb)\r\n\r\n  if (typeof fn !== 'function')\r\n    throw new TypeError('need wrapper function')\r\n\r\n  Object.keys(fn).forEach(function (k) {\r\n    wrapper[k] = fn[k]\r\n  })\r\n\r\n  return wrapper\r\n\r\n  function wrapper() {\r\n    var args = new Array(arguments.length)\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i]\r\n    }\r\n    var ret = fn.apply(this, args)\r\n    var cb = args[args.length-1]\r\n    if (typeof ret === 'function' && ret !== cb) {\r\n      Object.keys(cb).forEach(function (k) {\r\n        ret[k] = cb[k]\r\n      })\r\n    }\r\n    return ret\r\n  }\r\n}\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/wrappy/wrappy.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/wrappy/wrappy.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}}],"sources":{"node_modules/wrappy/wrappy.js":"// Returns a wrapper function that returns a wrapped callback\r\n// The wrapper function should do some stuff, and return a\r\n// presumably different callback function.\r\n// This makes sure that own properties are retained, so that\r\n// decorations and such are not lost along the way.\r\nmodule.exports = wrappy\r\nfunction wrappy (fn, cb) {\r\n  if (fn && cb) return wrappy(fn)(cb)\r\n\r\n  if (typeof fn !== 'function')\r\n    throw new TypeError('need wrapper function')\r\n\r\n  Object.keys(fn).forEach(function (k) {\r\n    wrapper[k] = fn[k]\r\n  })\r\n\r\n  return wrapper\r\n\r\n  function wrapper() {\r\n    var args = new Array(arguments.length)\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i]\r\n    }\r\n    var ret = fn.apply(this, args)\r\n    var cb = args[args.length-1]\r\n    if (typeof ret === 'function' && ret !== cb) {\r\n      Object.keys(cb).forEach(function (k) {\r\n        ret[k] = cb[k]\r\n      })\r\n    }\r\n    return ret\r\n  }\r\n}\r\n"},"lineCount":34}},"error":null,"hash":"87afbe125004a11c089a18a1d3d8c6ca","cacheData":{"env":{}}}